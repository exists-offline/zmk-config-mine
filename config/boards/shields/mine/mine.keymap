#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include "keys_de.h"

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        bindings = 
                            //  tab     Q       W       E       R       T               Z       U       I       O       P       Ü
                            
                            //  shift   A       S       D       F       G               H       J       K       L       Ö       Ä     
                            
                            //  ctrl    Y(alt)  X       C       V       B               N       M       ,       .       -(alt)  ctrl
                            
                            //                          win     ret(1)  space           bspc    del(2)   altgr
                            
                        <
                                &kp TAB &kp Q   &kp W   &kp E   &kp R   &kp T           &kp DE_Z   &kp U   &kp I   &kp O   &kp P   &kp DE_U_UMLAUT
                                &kp LSHIFT &kp A  &kp S &kp D   &kp F   &kp G           &kp H      &kp J   &kp K   &kp L   &kp DE_O_UMLAUT   &kp DE_A_UMLAUT
                                &kp LCTRL &kp DE_Y &kp X &kp C  &kp V   &kp B           &kp N      &kp M   &kp DE_COMMA &kp DE_PERIOD &kp DE_MINUS  &kp RCTRL
                                                   &kp LGUI &kp RET &kp SPACE           &kp BSPC &kp DEL &kp RALT
                        >;
                };

                num_layer {
                        bindings =
                            //  esc     f1      f2      f3      f4      f5              f6      f7      f8      f9      f10     f11
                            
                            //  ^^      1       2       3       4       5               6       7       8       9       0       f12
                            
                            //  _       _       bt_c    bt_n    bt_p    _               _       _       _       _       _       _
                            
                            //                          _       _       _               _       _       _

                        <
                                &kp TAB &kp Q   &kp W   &kp E   &kp R   &kp T           &kp DE_Z   &kp U   &kp I   &kp O   &kp P   &kp DE_U_UMLAUT
                                &kp LSHIFT &kp A  &kp S &kp D   &kp F   &kp G           &kp H      &kp J   &kp K   &kp L   &kp DE_O_UMLAUT   &kp DE_A_UMLAUT
                                &kp LCTRL &kp DE_Y &kp X &kp C  &kp V   &kp B           &kp N      &kp M   &kp DE_COMMA &kp DE_PERIOD &kp DE_MINUS  &kp RCTRL
                                                   &kp LGUI &kp RET &kp SPACE           &kp BSPC &kp DEL &kp RALT
                        >;
                };

                arrow_layer {
                        bindings =
                            //  _       ⁓       #       \       /       |               v_up    _       up      _       _       ß

                            //  _       [       ]       (       )       '               play    left    down    right   _       _
                            
                            //  _       <       >       {       }       "               v_down  p_tab   n_tab   _       _       _
                            
                            //                          _       _       _               _       _       _


                        <
                                &kp TAB &kp Q   &kp W   &kp E   &kp R   &kp T           &kp DE_Z   &kp U   &kp I   &kp O   &kp P   &kp DE_U_UMLAUT
                                &kp LSHIFT &kp A  &kp S &kp D   &kp F   &kp G           &kp H      &kp J   &kp K   &kp L   &kp DE_O_UMLAUT   &kp DE_A_UMLAUT
                                &kp LCTRL &kp DE_Y &kp X &kp C  &kp V   &kp B           &kp N      &kp M   &kp DE_COMMA &kp DE_PERIOD &kp DE_MINUS  &kp RCTRL
                                                   &kp LGUI &kp RET &kp SPACE           &kp BSPC &kp DEL &kp RALT
                        >;
                };
        };
};